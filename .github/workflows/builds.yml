# TRACCC library, part of the ACTS project (R&D line)
#
# (c) 2021-2023 CERN for the benefit of the ACTS project
#
# Mozilla Public License Version 2.0

name: Builds

on:
  push:
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  builds:
    name: ${{ matrix.platform.name }}-${{ matrix.build }}
    runs-on: ubuntu-latest
    container: ${{ matrix.platform.container }}
    strategy:
      matrix:
        platform:
          - name: CPU
            container: ghcr.io/acts-project/ubuntu2004:v30
          - name: CUDA
            container: ghcr.io/acts-project/ubuntu2004_cuda:v30
          - name: SYCL
            container: ghcr.io/acts-project/ubuntu2004_oneapi:v30
          - name: KOKKOS
            container: ghcr.io/acts-project/ubuntu2004:v30
          - name: ALPAKA
            container: ghcr.io/acts-project/ubuntu2204:v33
        build:
          - Release
          - Debug
    # Use BASH as the shell from the images.
    defaults:
      run:
        shell: bash
    steps:
      - name: Dependencies
        run: apt-get install -y git-lfs wget
      - uses: actions/checkout@v2
        with:
          submodules: true
          lfs: true
      - name: Download data files
        run: data/traccc_data_get_files.sh
      - name: Configure
        run: |
          source ${GITHUB_WORKSPACE}/.github/ci_setup.sh ${{ matrix.platform.name }}
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.build }} -DTRACCC_BUILD_${{ matrix.platform.name }}=TRUE -DTRACCC_FAIL_ON_WARNINGS=TRUE -S ${GITHUB_WORKSPACE} -B build
      - name: Build
        run: |
          source ${GITHUB_WORKSPACE}/.github/ci_setup.sh ${{ matrix.platform.name }}
          cmake --build build
      - name: Test
        if: "matrix.platform.name != 'CUDA'"
        run: |
          cd build
          source ${GITHUB_WORKSPACE}/.github/ci_setup.sh ${{ matrix.platform.name }}
          ctest --output-on-failure
      - name: FP64 Compliance
        if: "matrix.platform.name == 'CUDA' && matrix.build == 'Debug'"
        continue-on-error: true
        run: ${GITHUB_WORKSPACE}/.github/find_f64_ptx.py --source ${GITHUB_WORKSPACE} --build build $(find build -name "*.ptx")
